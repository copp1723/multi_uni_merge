"""\nWSGI entry point for gunicorn with proper SocketIO support\n"""\nimport os\nimport sys\nimport logging\n\n# Setup logging\nlogging.basicConfig(level=logging.INFO)\nlogger = logging.getLogger(__name__)\n\n# Add paths\nsys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))\n\n# Patch eventlet first - MUST be done before any other imports\nimport eventlet\neventlet.monkey_patch()\n\n# Now import the app\nfrom backend.main import create_app, swarm_app\n\n# Create the Flask app\nlogger.info("Creating Flask app for WSGI...")\napp = create_app()\n\n# Get the SocketIO instance\nsocketio = swarm_app.socketio if hasattr(swarm_app, 'socketio') else None\n\nif socketio:\n    logger.info("✅ SocketIO instance found - WebSocket support enabled")\n    # For gunicorn, we need to expose the SocketIO app, not the Flask app\n    application = socketio\nelse:\n    logger.error("❌ SocketIO instance not found - WebSocket will not work")\n    application = app\n\n# Also expose app and socketio at module level for debugging\n__all__ = ['application', 'app', 'socketio']